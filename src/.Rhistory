p <- p + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p
ggsave("tandwissel.individu.categorie.jpeg", plot = last_plot(), dpi = 300)
rm(p)
tab <- table(paste(tand.data.long.noNA.n12$ras, "-", tand.data.long.noNA.n12$geboortedatum))
cat("\n=== litters with more than 2 puppies in database (number of teeth)")
tab[tab/12 > 2] # 12 records per pup
nms <- names(tab[tab/12 > 2]) # welke ras-geb datum combinaties
df <- tand.data.long.noNA.n12 %>% filter(paste(ras, "-", geboortedatum) %in% nms)
p <- ggplot(df, aes(x = reorder(element, vnr), y = lft.1, group = rec.nr, color = substr(paste(ras, ",", geboortedatum), 1, 40))) + labs(title="Overview shedding deciduous teeth per element", y="Age (days)", x="Element") + theme_bw()
#+ theme_fivethirtyeight() + theme(axis.title = element_text(), text = element_text(family = "Rubik"))
p <- p + geom_line()
p <- p + geom_hline(yintercept= 105, linetype="dashed", color = "red", linewidth = 1)
p <- p + geom_vline(xintercept= 6.5, linetype="dashed", color = "black", linewidth = 1)
#p <- p + annotate("text", x = 3.5, y = 165, label = "Upper (L<->R)") + annotate("text", x = 9.5, y = 165, label = "Lower (R<->L)")
p <- p + labs(color = "Litter size > 2 puppies") + facet_wrap(~ substr(paste(ras, ",", geboortedatum), 1, 10))
p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
p
ggsave("tandwissel.nest.jpeg", plot = last_plot(), dpi = 300)
rm(tab, df, nms, p)
rm(tand.data.long.noNA)
rm(tand.data.long.noNA.n12)
tab<- describeBy(tand.data.long$lft.1, tand.data.long$element, mat=TRUE, na.rm = TRUE, digits=2)
names(tab)[2] <- "Element"
tab[,c(2,4:7, 10:12)]
tab <- tab[, c(2, 4, 5, 6)]
tab$OG95 <- round(tab$mean - 1.96 * tab$sd, 1)
tab$BG95 <- round(tab$mean + 1.96 * tab$sd, 1)
tab$OG99 <- round(tab$mean - 2.58 * tab$sd, 1)
tab$BG99 <- round(tab$mean + 2.58 * tab$sd, 1)
tab$mean <- round(tab$mean, 1)
tab$mean.wk <- round(tab$mean/7, 1)
tab$OG95.wk <- round(tab$OG95/7, 1)
tab$BG95.wk <- round(tab$BG95/7, 1)
tab
rm(tab)
tab<- describeBy(tand.data.long$lft.1, list(tand.data.long$element, tand.data.long$gewicht.categorie), mat=TRUE, na.rm = TRUE, digits=2)
names(tab)[c(2,3)] <- c("Element", "gew.categorie")
tab[,c(2,3,5:8, 11:13)]
tab <- tab[, c(2, 3, 5, 6, 7)]
tab$OG95 <- round(tab$mean - 1.96 * tab$sd, 1)
tab$BG95 <- round(tab$mean + 1.96 * tab$sd, 1)
tab$OG99 <- round(tab$mean - 2.58 * tab$sd, 1)
tab$BG99 <- round(tab$mean + 2.58 * tab$sd, 1)
tab$mean <- round(tab$mean, 1)
tab$mean.wk <- round(tab$mean/7, 1)
tab$OG95.wk <- round(tab$OG95/7, 1)
tab$BG95.wk <- round(tab$BG95/7, 1)
tab
rm(tab)
# vast stellen van de volgorde van wisselen per element
# zowel de volgorde van wisselen van 1 t/m 12 (ongeacht element)
# als de plaats van elk element in de volgorde van wisselen (welk element is vaak eerst .... laatst)
n <- nrow(tand.data)
df <- c(rec.nr = NA, chipnummer=NA, geboortedatum=NA, geslacht=NA, gew.categorie=NA, brach=NA, E503=NA, E502=NA, E501=NA, E601=NA, E602=NA, E603=NA, E703=NA, E702=NA, E701=NA, E801=NA, E802=NA, E803=NA,
V1=NA, V2=NA, V3=NA, V4=NA, V5=NA, V6=NA, V7=NA, V8=NA, V9=NA, V10=NA, V11=NA, V12=NA,
O503=NA, O502=NA, O501=NA, O601=NA, O602=NA, O603=NA, O703=NA, O702=NA, O701=NA, O801=NA, O802=NA, O803=NA)
#df <- data.frame(paste0("V",1:41)=NA)
for (i in 1:n) {
record <- as.numeric(tand.data[i,84:95])
o <- order(record)
r <- rank(record, ties.method = "min") # zie ?rank, dit is het volgnr voor elk element van wisselen
volgorde <- noquote(unlist(c(tand.data[i, c(83, 1, 5, 6, 8:9)], record , record[o], r))) # rec.nr = 83, ras, geslacht, grootte-, gewichtscategorie, brachycephaal, 4x schedelvorm
if (sum(is.na(record)>0)) {
volgorde <- noquote(unlist(c(tand.data[i, c(83, 1, 5, 6, 8:9)], record, rep(NA, 24))))
}
df <- rbind(df, volgorde) # In o wordt aangegeven welk volgnr de resp elementen zijn gewisseld
rm(record, o, r, volgorde)
}
rm(i, n)
#head(df)
#tail(df)
row.names(df) <- NULL
tand.volgnr <- data.frame(df[-1,])
cols.num <- c("rec.nr", "chipnummer", "geboortedatum", "geslacht", "gew.categorie", "brach", "E503", "E502", "E501", "E601", "E602", "E603", "E703", "E702", "E701", "E801", "E802", "E803",
"V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8", "V9", "V10", "V11", "V12",
"O503", "O502", "O501", "O601", "O602", "O603", "O703", "O702", "O701", "O801", "O802", "O803")
tand.volgnr[cols.num] <- sapply(tand.volgnr[cols.num], as.numeric)
#head(tand.volgnr)
#summary((tand.volgnr))
rm(df, cols.num)
#=======
cat("\n=== Percentielen van leeftijd per Element")
mat.E <- matrix(ncol=8, nrow=12) # matrix voor de leeftijd bij wisselen per element
for (i in 1:12) { # 12 elementen in variabele 8 t/m 19
mat.E[i,1] <- i # element
mat.E[i, 2:8] <- quantile(tand.volgnr[,c(i + 6)], c(0, 0.025, 0.05, 0.1, 0.15, 0.25, 0.5), na.rm=T)
}
rm(i)
mat.E <- data.frame(mat.E)
names(mat.E) <- c("Element", "p0", "p.025", "p.05", "p.1", "p.15", "p.25", "p.5")
mat.E$Element <- c("E503", "E502", "E501", "E601", "E602", "E603", "E703", "E702", "E701", "E801", "E802", "E803")
mat.E[, c(1:8)]
#rm(mat.E)
#boxplot(tand.volgnr[, c(6:17)], xlab="Element", ylab="Leeftijd bij wisselen (dgn)", cex.axis=0.75)
#abline(h=105, lty = 2, col = "red")
#=======
cat("\n=== Percentielen van leeftijd per wisselvolgorde")
mat.O <- matrix(ncol=8, nrow=12) # matrix voor de wisselvolgorde
for (i in 1:12) { # 12 elementen in variabele 8 t/m 19
mat.O[i,1] <- i # element volgnummer
mat.O[i, 2:8] <- quantile(tand.volgnr[,c(i + 18)], c(0, 0.025, 0.05, 0.1, 0.15, 0.25, 0.5), na.rm=T)
}
rm(i)
mat.O <- data.frame(mat.O)
names(mat.O) <- c("Volgnr", "p0", "p.025", "p.05", "p.1", "p.15", "p.25", "p.5")
mat.O$Volgnr <- paste0("V", 1:12)
mat.O
#rm(mat.O)
#boxplot(tand.volgnr[, c(18:29)], xlab="volgnummer", ylab="Leeftijd bij wisselen (dgn)", names= paste0("V", 1:12), cex.axis=0.75)
#abline(h=105, lty = 2, col = "red")
#=======
cat("\n=== Frequenties van volgnummer per element")
mat.Q <- matrix(ncol=13, nrow=12, rep(0, 156)) # matrix voor de wisselvolgorde per element
for (i in 31:42) { # 12 elementen in variabele 31:42
x <- table(tand.volgnr[,i]) # niet elk element zal minstens in elke wisselpositie van wisseling voorkomen
nms <- as.numeric(names(x))
x <- as.numeric(x)
mat.Q[i-30, 1] <- names(tand.volgnr)[i]
for (j in 1:length(x)) {
#nms[j]
mat.Q[i-30, nms[j] + 1] <- x[j]
}
}
rm(i, j, x, nms)
mat.Q <- data.frame(mat.Q)
names(mat.Q) <- c("Element", paste0("V", 1:12))
mat.Q
cat("\n=== LET OP: indien meerdere elementen tegelijk gewisseld zijn, \n    krijgen deze hetzelfde volgnr.")
#rm(mat.Q)
# vast stellen van de volgorde van wisselen per element
# zowel de volgorde van wisselen van 1 t/m 12 (ongeacht element)
# als de plaats van elk element in de volgorde van wisselen (welk element is vaak eerst .... laatst)
n <- nrow(tand.data)
df <- c(rec.nr = NA, chipnummer=NA, geboortedatum=NA, geslacht=NA, gew.categorie=NA, brach=NA, E503=NA, E502=NA, E501=NA, E601=NA, E602=NA, E603=NA, E703=NA, E702=NA, E701=NA, E801=NA, E802=NA, E803=NA,
V1=NA, V2=NA, V3=NA, V4=NA, V5=NA, V6=NA, V7=NA, V8=NA, V9=NA, V10=NA, V11=NA, V12=NA,
O503=NA, O502=NA, O501=NA, O601=NA, O602=NA, O603=NA, O703=NA, O702=NA, O701=NA, O801=NA, O802=NA, O803=NA)
#df <- data.frame(paste0("V",1:41)=NA)
for (i in 1:n) {
record <- as.numeric(tand.data[i,84:95])
o <- order(record)
r <- rank(record, ties.method = "min") # zie ?rank, dit is het volgnr voor elk element van wisselen
volgorde <- noquote(unlist(c(tand.data[i, c(83, 1, 5, 6, 8:9)], record , record[o], r))) # rec.nr = 83, ras, geslacht, grootte-, gewichtscategorie, brachycephaal, 4x schedelvorm
if (sum(is.na(record)>0)) {
volgorde <- noquote(unlist(c(tand.data[i, c(83, 1, 5, 6, 8:9)], record, rep(NA, 24))))
}
df <- rbind(df, volgorde) # In o wordt aangegeven welk volgnr de resp elementen zijn gewisseld
rm(record, o, r, volgorde)
}
rm(i, n)
#head(df)
#tail(df)
row.names(df) <- NULL
tand.volgnr <- data.frame(df[-1,])
cols.num <- c("rec.nr", "chipnummer", "geboortedatum", "geslacht", "gew.categorie", "brach", "E503", "E502", "E501", "E601", "E602", "E603", "E703", "E702", "E701", "E801", "E802", "E803",
"V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8", "V9", "V10", "V11", "V12",
"O503", "O502", "O501", "O601", "O602", "O603", "O703", "O702", "O701", "O801", "O802", "O803")
tand.volgnr[cols.num] <- sapply(tand.volgnr[cols.num], as.numeric)
#head(tand.volgnr)
#summary((tand.volgnr))
rm(df, cols.num)
#=======
cat("\n=== Percentielen van leeftijd per Element")
mat.E <- matrix(ncol=8, nrow=12) # matrix voor de leeftijd bij wisselen per element
for (i in 1:12) { # 12 elementen in variabele 8 t/m 19
mat.E[i,1] <- i # element
mat.E[i, 2:8] <- quantile(tand.volgnr[,c(i + 6)], c(0, 0.025, 0.05, 0.1, 0.15, 0.25, 0.5), na.rm=T)
}
rm(i)
mat.E <- data.frame(mat.E)
names(mat.E) <- c("Element", "p0", "p.025", "p.05", "p.1", "p.15", "p.25", "p.5")
mat.E$Element <- c("E503", "E502", "E501", "E601", "E602", "E603", "E703", "E702", "E701", "E801", "E802", "E803")
mat.E[, c(1:8)]
#rm(mat.E)
#boxplot(tand.volgnr[, c(6:17)], xlab="Element", ylab="Leeftijd bij wisselen (dgn)", cex.axis=0.75)
#abline(h=105, lty = 2, col = "red")
#=======
cat("\n=== Percentielen van leeftijd per wisselvolgorde")
mat.O <- matrix(ncol=8, nrow=12) # matrix voor de wisselvolgorde
for (i in 1:12) { # 12 elementen in variabele 8 t/m 19
mat.O[i,1] <- i # element volgnummer
mat.O[i, 2:8] <- quantile(tand.volgnr[,c(i + 18)], c(0, 0.025, 0.05, 0.1, 0.15, 0.25, 0.5), na.rm=T)
}
rm(i)
mat.O <- data.frame(mat.O)
names(mat.O) <- c("Volgnr", "p0", "p.025", "p.05", "p.1", "p.15", "p.25", "p.5")
mat.O$Volgnr <- paste0("V", 1:12)
mat.O
#rm(mat.O)
#boxplot(tand.volgnr[, c(18:29)], xlab="volgnummer", ylab="Leeftijd bij wisselen (dgn)", names= paste0("V", 1:12), cex.axis=0.75)
#abline(h=105, lty = 2, col = "red")
#=======
cat("\n=== Frequenties van volgnummer per element")
mat.Q <- matrix(ncol=13, nrow=12, rep(0, 156)) # matrix voor de wisselvolgorde per element
for (i in 31:42) { # 12 elementen in variabele 31:42
x <- table(tand.volgnr[,i]) # niet elk element zal minstens in elke wisselpositie van wisseling voorkomen
nms <- as.numeric(names(x))
x <- as.numeric(x)
mat.Q[i-30, 1] <- names(tand.volgnr)[i]
for (j in 1:length(x)) {
#nms[j]
mat.Q[i-30, nms[j] + 1] <- x[j]
}
}
rm(i, j, x, nms)
mat.Q <- data.frame(mat.Q)
names(mat.Q) <- c("Element", paste0("V", 1:12))
mat.Q
cat("\n=== LET OP: indien meerdere elementen tegelijk gewisseld zijn, \n    krijgen deze hetzelfde volgnr.")
#rm(mat.Q)
View(tand.volgnr)
View(tand.volgnr)
# vast stellen van de volgorde van wisselen per element
# zowel de volgorde van wisselen van 1 t/m 12 (ongeacht element)
# als de plaats van elk element in de volgorde van wisselen (welk element is vaak eerst .... laatst)
n <- nrow(tand.data)
df <- c(rec.nr = NA, chipnummer=NA, geboortedatum=NA, geslacht=NA, gew.categorie=NA, brach=NA, E503=NA, E502=NA, E501=NA, E601=NA, E602=NA, E603=NA, E703=NA, E702=NA, E701=NA, E801=NA, E802=NA, E803=NA,
V1=NA, V2=NA, V3=NA, V4=NA, V5=NA, V6=NA, V7=NA, V8=NA, V9=NA, V10=NA, V11=NA, V12=NA,
O503=NA, O502=NA, O501=NA, O601=NA, O602=NA, O603=NA, O703=NA, O702=NA, O701=NA, O801=NA, O802=NA, O803=NA)
#df <- data.frame(paste0("V",1:41)=NA)
for (i in 1:n) {
record <- as.numeric(tand.data[i,84:95])
o <- order(record)
r <- rank(record, ties.method = "min") # zie ?rank, dit is het volgnr voor elk element van wisselen
volgorde <- noquote(unlist(c(tand.data[i, c(83, 1, 5, 6, 8:9)], record , record[o], r))) # rec.nr = 83, ras, geslacht, grootte-, gewichtscategorie, brachycephaal, 4x schedelvorm
if (sum(is.na(record)>0)) {
volgorde <- noquote(unlist(c(tand.data[i, c(83, 1, 5, 6, 8:9)], record, rep(NA, 24))))
}
df <- rbind(df, volgorde) # In o wordt aangegeven welk volgnr de resp elementen zijn gewisseld
rm(record, o, r, volgorde)
}
rm(i, n)
#head(df)
#tail(df)
row.names(df) <- NULL
tand.volgnr <- data.frame(df[-1,])
cols.num <- c("gew.categorie", "brach", "E503", "E502", "E501", "E601", "E602", "E603", "E703", "E702", "E701",
"E801", "E802", "E803", "V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8", "V9", "V10", "V11", "V12",
"O503", "O502", "O501", "O601", "O602", "O603", "O703", "O702", "O701", "O801", "O802", "O803")
# "rec.nr", "chipnummer", "geboortedatum", "geslacht",
tand.volgnr[cols.num] <- sapply(tand.volgnr[cols.num], as.numeric)
#head(tand.volgnr)
#summary((tand.volgnr))
rm(df, cols.num)
#=======
cat("\n=== Percentielen van leeftijd per Element")
mat.E <- matrix(ncol=8, nrow=12) # matrix voor de leeftijd bij wisselen per element
for (i in 1:12) { # 12 elementen in variabele 8 t/m 19
mat.E[i,1] <- i # element
mat.E[i, 2:8] <- quantile(tand.volgnr[,c(i + 6)], c(0, 0.025, 0.05, 0.1, 0.15, 0.25, 0.5), na.rm=T)
}
rm(i)
mat.E <- data.frame(mat.E)
names(mat.E) <- c("Element", "p0", "p.025", "p.05", "p.1", "p.15", "p.25", "p.5")
mat.E$Element <- c("E503", "E502", "E501", "E601", "E602", "E603", "E703", "E702", "E701", "E801", "E802", "E803")
mat.E[, c(1:8)]
#rm(mat.E)
#boxplot(tand.volgnr[, c(6:17)], xlab="Element", ylab="Leeftijd bij wisselen (dgn)", cex.axis=0.75)
#abline(h=105, lty = 2, col = "red")
#=======
cat("\n=== Percentielen van leeftijd per wisselvolgorde")
mat.O <- matrix(ncol=8, nrow=12) # matrix voor de wisselvolgorde
for (i in 1:12) { # 12 elementen in variabele 8 t/m 19
mat.O[i,1] <- i # element volgnummer
mat.O[i, 2:8] <- quantile(tand.volgnr[,c(i + 18)], c(0, 0.025, 0.05, 0.1, 0.15, 0.25, 0.5), na.rm=T)
}
rm(i)
mat.O <- data.frame(mat.O)
names(mat.O) <- c("Volgnr", "p0", "p.025", "p.05", "p.1", "p.15", "p.25", "p.5")
mat.O$Volgnr <- paste0("V", 1:12)
mat.O
#rm(mat.O)
#boxplot(tand.volgnr[, c(18:29)], xlab="volgnummer", ylab="Leeftijd bij wisselen (dgn)", names= paste0("V", 1:12), cex.axis=0.75)
#abline(h=105, lty = 2, col = "red")
#=======
cat("\n=== Frequenties van volgnummer per element")
mat.Q <- matrix(ncol=13, nrow=12, rep(0, 156)) # matrix voor de wisselvolgorde per element
for (i in 31:42) { # 12 elementen in variabele 31:42
x <- table(tand.volgnr[,i]) # niet elk element zal minstens in elke wisselpositie van wisseling voorkomen
nms <- as.numeric(names(x))
x <- as.numeric(x)
mat.Q[i-30, 1] <- names(tand.volgnr)[i]
for (j in 1:length(x)) {
#nms[j]
mat.Q[i-30, nms[j] + 1] <- x[j]
}
}
rm(i, j, x, nms)
mat.Q <- data.frame(mat.Q)
names(mat.Q) <- c("Element", paste0("V", 1:12))
mat.Q
cat("\n=== LET OP: indien meerdere elementen tegelijk gewisseld zijn, \n    krijgen deze hetzelfde volgnr.")
#rm(mat.Q)
#==============================================
# Tand.data omzetten naar long format
tand.data.long2 <- tand.volgnr[, c(1:6, 19:30)]  %>%
gather("V1","V2","V3","V4","V5" ,"V6","V7","V8","V9","V10","V11","V12", key = volgnr, value = volgnr.lft)
tand.data.long2 <- as.data.frame(tand.data.long2)
#tand.data.long2$chipnummer <- as.numeric(tand.data.long2$chipnummer)
tand.data.long2$vnr <- tand.data.long2$volgnr
tand.data.long2 <- tand.data.long2 %>% mutate(vnr = recode_factor(vnr, `V1` = "1", `V2` = "2", `V3` = "3",
`V4` = "4", `V5` = "5", `V6` = "6",
`V7` = "7", `V8` = "8", `V9` = "9",
`V10` = "10", `V11` = "11", `V12` = "12"))
tand.data.long2$vnr <- as.numeric(tand.data.long2$vnr)
tand.data.long2.noNA <- subset(tand.data.long2, !is.na(volgnr.lft))
tab <- describeBy(tand.data.long2$volgnr.lft, tand.data.long2$volgnr, mat = T)
names(tab)[2] <- "volgnr"
tab[,c(2,4,5,6,7,10,11)]
rm(tab)
p <- ggplot(tand.data.long2.noNA, aes(x = reorder(volgnr, vnr), y = volgnr.lft))
p <- p + geom_boxplot()
p <- p + geom_hline(yintercept= 105, linetype="dashed", color = "red", linewidth = 1)
p <- p + labs( x= "Volgnummer van wisselen", y = "Leeftijd bij wisselen (dagen)")
p
rm(p)
p <- ggplot(tand.data.long2.noNA, aes(x = reorder(volgnr, vnr), y = volgnr.lft))
p <- p + geom_boxplot()
cust_label <- setNames(paste0("Categorie:",unique(tand.data.long2.noNA$gew.categorie)), unique(tand.data.long2.noNA$gew.categorie))
p <- p + facet_wrap(~ gew.categorie, labeller = as_labeller(cust_label))
p <- p + geom_hline(yintercept= 105, linetype="dashed", color = "red", linewidth = 1)
p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p <- p + labs( x= "Volgnummer van wisselen", y = "Leeftijd bij wisselen (dagen)")
p
rm(p, cust_label)
# Tand.data omzetten naar long format
tand.volgnr.noNA <- subset(tand.volgnr, !is.na(O503))
tand.data.long3 <- tand.volgnr.noNA[, c(1:6,31:42)]  %>%
gather("O503","O502","O501","O601","O602" ,"O603","O803","O802","O801","O701","O702","O703", key = element, value = nummer)
tand.data.long3 <- as.data.frame(tand.data.long3)
sum.tab <- tand.data.long3 %>%
count(element, nummer) %>%
group_by(element) %>%          # now required with changes to dplyr::count()
mutate(prop = prop.table(n))
sum.tab <- sum.tab[!is.na(sum.tab$nummer),]
# http://www.sthda.com/english/wiki/ggplot2-barplots-quick-start-guide-r-software-and-data-visualization
# http://rstudio-pubs-static.s3.amazonaws.com/5312_98fc1aba2d5740dd849a5ab797cc2c8d.html
# https://www.r-bloggers.com/2013/09/how-to-expand-color-palette-with-ggplot-and-rcolorbrewer/
sum.tab$vnr <- sum.tab$element
sum.tab <- sum.tab %>% mutate(vnr = recode_factor(vnr, `O503` = "1", `O502` = "2", `O501` = "3",
`O601` = "4", `O602` = "5", `O603` = "6",
`O803` = "7", `O802` = "8", `O801` = "9",
`O701` = "10", `O702` = "11", `O703` = "12"))
p <- ggplot(sum.tab, aes(x= reorder(element, as.numeric(vnr)), y = n, fill = factor(nummer)))
p <- p + geom_bar(stat="identity", color="black") + labs(x = "Element", y = "Aantal") + guides(fill=guide_legend(title='Volgnummer'))
p <- p + scale_fill_manual(values = get_palette(palette = "lancet", 12))
p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#p <- p + scale_fill_brewer(palette="Accent") # scale_fill_brewer(palette="Blues") + theme_bw()
#p <- p + scale_fill_manual(values=c("red", "blue", "black", "cyan", "violet", "green", "brown", "orange", "grey", "#999999", "#E69F00", "#56B4E9")) + theme_minimal()
#p <- p + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#999999", "#E69F00", "#56B4E9", "#999999", "#E69F00", "#56B4E9", "#999999", "#E69F00", "#56B4E9")) + theme_minimal()
p
rm(p)
p <- ggplot(sum.tab, aes(x= reorder(element, as.numeric(vnr)), y = prop, fill = factor(nummer)))
p <- p + geom_bar(stat="identity", color="black") + labs(x = "Element", y = "Proportie") + guides(fill=guide_legend(title='Volgnummer'))
p <- p + scale_fill_manual(values = get_palette(palette = "lancet", 12))
p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#p <- p + scale_fill_brewer(palette="Accent") # scale_fill_brewer(palette="Blues") + theme_bw()
#p <- p + scale_fill_manual(values=c("red", "blue", "black", "cyan", "violet", "green", "brown", "orange", "grey", "#999999", "#E69F00", "#56B4E9")) + theme_minimal()
#p <- p + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#999999", "#E69F00", "#56B4E9", "#999999", "#E69F00", "#56B4E9", "#999999", "#E69F00", "#56B4E9")) + theme_minimal()
p
rm(p)
#names(tand.data)
tand.data.4 <- tand.data[tand.data$n == 12,]
tand.data.4$T4 <- tand.data.4$T3 <- tand.data.4$T2 <- tand.data.4$T1 <- NA
for (i in 1:nrow(tand.data.4)) {
x <- c(tand.data.4$E501.1[i], tand.data.4$E601.1[i], tand.data.4$E701.1[i], tand.data.4$E801.1[i])
x <- x[order(x)]
tand.data.4[i, c(100:103)] <- x
rm(x)
}
p <- ggplot(tand.data.4, aes(x=factor(gewicht.categorie), y = T1))
p <- p + geom_boxplot(alpha = 0) + geom_jitter(width = 0.25)
# Hiding the outliers can be achieved by setting outlier.shape = NA
p <- p + labs(y ="Leeftijd van wisselen eerste van middelste tanden (dagen)", x = "Gewicht categorie")
p
rm(p)
p <- ggplot(tand.data.4, aes(x=factor(gewicht.categorie), y = T2))
p <- p + geom_boxplot(alpha = 0) + geom_jitter(width = 0.25)
p <- p + labs(y ="Leeftijd van wisselen tweede van middelste tanden (dagen)", x = "Gewicht categorie")
p
rm(p)
p <- ggplot(tand.data.4, aes(x=factor(gewicht.categorie), y = T3))
p <- p + geom_boxplot(alpha = 0) + geom_jitter(width = 0.25)
p <- p + labs(y ="Leeftijd van wisselen derde van middelste tanden (dagen)", x = "Gewicht categorie")
p
rm(p)
p <- ggplot(tand.data.4, aes(x=factor(gewicht.categorie), y = T4))
p <- p + geom_boxplot(alpha = 0) + geom_jitter(width = 0.25)
p <- p + labs(y ="Leeftijd van wisselen vierde van middelste tanden (dagen)", x = "Gewicht categorie")
p
rm(p)
p12 <- ggscatter(tand.data.4, x = "T1", y = "T2", xlim = c(80, 270), ylim = c(80, 270), facet.by = "gewicht.categorie", xlab = "Leeftijd Eerste Tand (dgn)", ylab = "Leeftijd Tweede Tand (dgn)", main = "Per gewichtscategorie")
p12
p13 <- ggscatter(tand.data.4, x = "T1", y = "T3", xlim = c(80, 270), ylim = c(80, 270), facet.by = "gewicht.categorie", xlab = "Leeftijd Eerste Tand (dgn)", ylab = "Leeftijd Derde Tand (dgn)", main = "Per gewichtscategorie")
p13
p14 <- ggscatter(tand.data.4, x = "T1", y = "T4", xlim = c(80, 270), ylim = c(80, 270), facet.by = "gewicht.categorie", xlab = "Leeftijd Eerste Tand (dgn)", ylab = "Leeftijd Vierde Tand (dgn)", main = "Per gewichtscategorie")
p14
p23 <- ggscatter(tand.data.4, x = "T2", y = "T3", xlim = c(80, 270), ylim = c(80, 270), facet.by = "gewicht.categorie", xlab = "Leeftijd Tweede Tand (dgn)", ylab = "Leeftijd Derde Tand (dgn)", main = "Per gewichtscategorie")
p23
p24 <- ggscatter(tand.data.4, x = "T2", y = "T4", xlim = c(80, 270), ylim = c(80, 270), facet.by = "gewicht.categorie", xlab = "Leeftijd Tweede Tand (dgn)", ylab = "Leeftijd Vierde Tand (dgn)", main = "Per gewichtscategorie")
p24
p34 <- ggscatter(tand.data.4, x = "T3", y = "T4", xlim = c(80, 270), ylim = c(80, 270), facet.by = "gewicht.categorie", xlab = "Leeftijd Derde Tand (dgn)", ylab = "Leeftijd Vierde Tand (dgn)", main = "Per gewichtscategorie")
p34
rm(p12, p13, p14, p23, p24, p34)
cat("\n=== Correlatie tussen de wisselleeftijd van de 4 middelste elementen (E)\n    en hun volgnummer (T1-T4)")
round(cor(tand.data.4[, c(100:103)], use = "pairwise.complete.obs"), 3)
# verdeling van de eerste van de middelste tanden
df <- data.frame()
for (i in 0:5){
x <- with(tand.data.4[tand.data.4$gewicht.categorie == i, ], quantile(T1, c(0, 0.01, 0.025, 0.05, 0.075, 0.1)))
df <- rbind(df, x)
}
names(df) <- c("p0", "p.01", "p.025", "p.05", "p.075", "p.10")
df <- data.frame(gew.categorie= c(0:5), df)
df$gem <- as.numeric(tapply(tand.data.4$T1, tand.data.4$gewicht.categorie, mean))
df$stdev <- as.numeric(tapply(tand.data.4$T1, tand.data.4$gewicht.categorie, sd))
cat("\n=== Percentielen van eerste middelste tand")
df
rm(df)
# verdeling van de tweede van de middelste tanden
df <- data.frame()
for (i in 0:5){
x <- with(tand.data.4[tand.data.4$gewicht.categorie == i, ], quantile(T2, c(0, 0.01, 0.025, 0.05, 0.075, 0.1)))
df <- rbind(df, x)
}
names(df) <- c("p0", "p.01", "p.025", "p.05", "p.075", "p.10")
df <- data.frame(gew.categorie= c(0:5), df)
df$gem <- as.numeric(tapply(tand.data.4$T2, tand.data.4$gewicht.categorie, mean))
df$stdev <- as.numeric(tapply(tand.data.4$T2, tand.data.4$gewicht.categorie, sd))
cat("\n=== Percentielen van tweede middelste tand")
df
rm(df)
# verdeling van de derde van de middelste tanden
df <- data.frame()
for (i in 0:5){
x <- with(tand.data.4[tand.data.4$gewicht.categorie == i, ], quantile(T3, c(0, 0.01, 0.025, 0.05, 0.075, 0.1)))
df <- rbind(df, x)
}
names(df) <- c("p0", "p.01", "p.025", "p.05", "p.075", "p.10")
df <- data.frame(gew.categorie= c(0:5), df)
df$gem <- as.numeric(tapply(tand.data.4$T3, tand.data.4$gewicht.categorie, mean))
df$stdev <- as.numeric(tapply(tand.data.4$T3, tand.data.4$gewicht.categorie, sd))
cat("\n=== Percentielen van derde middelste tand")
df
rm(df)
# verdeling van de vierde van de middelste tanden
df <- data.frame()
for (i in 0:5){
x <- with(tand.data.4[tand.data.4$gewicht.categorie == i, ], quantile(T4, c(0, 0.01, 0.025, 0.05, 0.075, 0.1)))
df <- rbind(df, x)
}
names(df) <- c("p0", "p.01", "p.025", "p.05", "p.075", "p.10")
df <- data.frame(gew.categorie= c(0:5), df)
df$gem <- as.numeric(tapply(tand.data.4$T4, tand.data.4$gewicht.categorie, mean))
df$stdev <- as.numeric(tapply(tand.data.4$T4, tand.data.4$gewicht.categorie, sd))
cat("\n=== Percentielen van vierde middelste tand")
df
rm(df)
p12 <- ggscatter(tand.data.4, x = "T1", y = "T2", xlim = c(80, 225), ylim = c(80, 225), facet.by = "gewicht.categorie", xlab = "Leeftijd Eerste Tand (dgn)", ylab = "Leeftijd Tweede Tand (dgn)", main = "Per gewichtscategorie")
p12
p13 <- ggscatter(tand.data.4, x = "T1", y = "T3", xlim = c(80, 225), ylim = c(80, 225), facet.by = "gewicht.categorie", xlab = "Leeftijd Eerste Tand (dgn)", ylab = "Leeftijd Derde Tand (dgn)", main = "Per gewichtscategorie")
p13
p14 <- ggscatter(tand.data.4, x = "T1", y = "T4", xlim = c(80, 225), ylim = c(80, 225), facet.by = "gewicht.categorie", xlab = "Leeftijd Eerste Tand (dgn)", ylab = "Leeftijd Vierde Tand (dgn)", main = "Per gewichtscategorie")
p14
p23 <- ggscatter(tand.data.4, x = "T2", y = "T3", xlim = c(80, 225), ylim = c(80, 225), facet.by = "gewicht.categorie", xlab = "Leeftijd Tweede Tand (dgn)", ylab = "Leeftijd Derde Tand (dgn)", main = "Per gewichtscategorie")
p23
p24 <- ggscatter(tand.data.4, x = "T2", y = "T4", xlim = c(80, 225), ylim = c(80, 225), facet.by = "gewicht.categorie", xlab = "Leeftijd Tweede Tand (dgn)", ylab = "Leeftijd Vierde Tand (dgn)", main = "Per gewichtscategorie")
p24
p34 <- ggscatter(tand.data.4, x = "T3", y = "T4", xlim = c(80, 225), ylim = c(80, 225), facet.by = "gewicht.categorie", xlab = "Leeftijd Derde Tand (dgn)", ylab = "Leeftijd Vierde Tand (dgn)", main = "Per gewichtscategorie")
p34
cat("\n=== Correlatie tussen de wisselleeftijd van de elementen")
round(cor(tand.volgnr[, 7:18], use = "pairwise.complete.obs"), 2)
cat("\n=== Correlatie tussen de wisselleeftijd van de volgorde")
round(cor(tand.volgnr[, 19:30], use = "pairwise.complete.obs"), 2)
tand.data.long2$volgnr <- factor(tand.data.long2$volgnr)
fit <- glm(volgnr.lft ~ factor(vnr) + factor(gew.categorie) + geslacht, data = tand.data.long2)
summary(fit)
425493 /7554
sqrt(425493 /7554)
?predict
?glm
predict(fit, type = "response")
tapply(predict(fit, type = "response") , tand.data.long2$vnr, range )
qqnorm(resid(fit))
abline(0, sd(resid(fit)))
plot(predict(fit), resid(fit))
setwd("C:/Users/verno104/OneDrive - Universiteit Utrecht/Consultaties/git_workshop2023/elearning/src")
## Part 2b Reading .txt or .csv file and study the imported data
pwd <- "..\data\raw"
## Part 2b Reading .txt or .csv file and study the imported data
pwd <- "../data/raw"
ls(pwd)
ls(..)
ls(.)
list.files(pwd)
paste0(pwd, file)
file <- "simulated_data.csv"
paste0(pwd, file)
## Part 2b Reading .txt or .csv file and study the imported data
pwd <- "../data/raw/"
file <- "simulated_data.csv"
paste0(pwd, file)
sim.data <- read.table(paste0(pwd, file), sep = "\t", dec = ".", header = TRUE)
## checking the imported file
# Show the first 6 records
head(sim.data, 6)
# Show the last 6 records
tail(sim.data, 6)
# record number 25 - 30
sim.data[25:30,]
# simple summary per variable (column)
summary(sim.data)
